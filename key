import org.jsoup.Connection;
import org.jsoup.Jsoup;

import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.cert.Certificate;

public class Utils {
    public static void authorizeWithPrivateKey(String url, String privateKeyPath, String privateKeyPassword) throws Exception {
        // Загрузка приватного ключа
        PrivateKey privateKey = loadPrivateKey(privateKeyPath, privateKeyPassword);

        // Создание и инициализация хранилища ключей
        KeyStore keyStore = KeyStore.getInstance("PKCS12");
        FileInputStream inputStream = new FileInputStream(privateKeyPath);
        keyStore.load(inputStream, privateKeyPassword.toCharArray());
        Certificate certificate = keyStore.getCertificate(keyStore.aliases().nextElement());

        // Установка настроек SSL
        SSLContext sslContext = SSLContext.getInstance("TLS");
        sslContext.init(null, null, null);
        HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());
        HttpsURLConnection.setDefaultHostnameVerifier((hostname, sslSession) -> true);

        // Создание соединения с использованием приватного ключа
        Connection connection = Jsoup.connect(url).sslSocketFactory(privateKey, (java.security.cert.X509Certificate) certificate);

        // Выполнение авторизации
        Connection.Response response = connection.execute();
        // Дальнейшая обработка ответа...

        inputStream.close();
    }

    private static PrivateKey loadPrivateKey(String privateKeyPath, String privateKeyPassword) throws Exception {
        KeyStore keyStore = KeyStore.getInstance("PKCS12");
        FileInputStream inputStream = new FileInputStream(privateKeyPath);
        keyStore.load(inputStream, privateKeyPassword.toCharArray());
        PrivateKey privateKey = (PrivateKey) keyStore.getKey(keyStore.aliases().nextElement(), privateKeyPassword.toCharArray());
        inputStream.close();
        return privateKey;
    }
}
